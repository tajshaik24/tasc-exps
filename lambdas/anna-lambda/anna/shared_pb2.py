# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: shared.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='shared.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0cshared.proto\"\x19\n\tStringSet\x12\x0c\n\x04keys\x18\x01 \x03(\t\"\x81\x01\n\nKeyVersion\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x32\n\x0cvector_clock\x18\x02 \x03(\x0b\x32\x1c.KeyVersion.VectorClockEntry\x1a\x32\n\x10VectorClockEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\"+\n\x0eKeyVersionList\x12\x19\n\x04keys\x18\x01 \x03(\x0b\x32\x0b.KeyVersionb\x06proto3')
)




_STRINGSET = _descriptor.Descriptor(
  name='StringSet',
  full_name='StringSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keys', full_name='StringSet.keys', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=41,
)


_KEYVERSION_VECTORCLOCKENTRY = _descriptor.Descriptor(
  name='VectorClockEntry',
  full_name='KeyVersion.VectorClockEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='KeyVersion.VectorClockEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='KeyVersion.VectorClockEntry.value', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=173,
)

_KEYVERSION = _descriptor.Descriptor(
  name='KeyVersion',
  full_name='KeyVersion',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='KeyVersion.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vector_clock', full_name='KeyVersion.vector_clock', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_KEYVERSION_VECTORCLOCKENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=173,
)


_KEYVERSIONLIST = _descriptor.Descriptor(
  name='KeyVersionList',
  full_name='KeyVersionList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keys', full_name='KeyVersionList.keys', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=175,
  serialized_end=218,
)

_KEYVERSION_VECTORCLOCKENTRY.containing_type = _KEYVERSION
_KEYVERSION.fields_by_name['vector_clock'].message_type = _KEYVERSION_VECTORCLOCKENTRY
_KEYVERSIONLIST.fields_by_name['keys'].message_type = _KEYVERSION
DESCRIPTOR.message_types_by_name['StringSet'] = _STRINGSET
DESCRIPTOR.message_types_by_name['KeyVersion'] = _KEYVERSION
DESCRIPTOR.message_types_by_name['KeyVersionList'] = _KEYVERSIONLIST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

StringSet = _reflection.GeneratedProtocolMessageType('StringSet', (_message.Message,), dict(
  DESCRIPTOR = _STRINGSET,
  __module__ = 'shared_pb2'
  # @@protoc_insertion_point(class_scope:StringSet)
  ))
_sym_db.RegisterMessage(StringSet)

KeyVersion = _reflection.GeneratedProtocolMessageType('KeyVersion', (_message.Message,), dict(

  VectorClockEntry = _reflection.GeneratedProtocolMessageType('VectorClockEntry', (_message.Message,), dict(
    DESCRIPTOR = _KEYVERSION_VECTORCLOCKENTRY,
    __module__ = 'shared_pb2'
    # @@protoc_insertion_point(class_scope:KeyVersion.VectorClockEntry)
    ))
  ,
  DESCRIPTOR = _KEYVERSION,
  __module__ = 'shared_pb2'
  # @@protoc_insertion_point(class_scope:KeyVersion)
  ))
_sym_db.RegisterMessage(KeyVersion)
_sym_db.RegisterMessage(KeyVersion.VectorClockEntry)

KeyVersionList = _reflection.GeneratedProtocolMessageType('KeyVersionList', (_message.Message,), dict(
  DESCRIPTOR = _KEYVERSIONLIST,
  __module__ = 'shared_pb2'
  # @@protoc_insertion_point(class_scope:KeyVersionList)
  ))
_sym_db.RegisterMessage(KeyVersionList)


_KEYVERSION_VECTORCLOCKENTRY._options = None
# @@protoc_insertion_point(module_scope)
